function [Xext, Yext, Zext, ca_range, Zres] = surface_extension_rectangular(...
    X, Y, Z,...unextended surface error map
    tif_params,...TIF sampling interval [m/pxl]
    Ztif,  ...TIF profile
    method, ...extension method
    is_fall, ...using fall profile or not
    fxRange, fyRange, ...frequency domains for Gerchberg Pouplis algorithm
    orderM, orderN,... orders for polynomial fitting algorithm
    type,...polynomial type for polynomial fitting, 'Chebyshev' or 'Legendre'
    B,... boundary conditions
    W... weights
    )
% Info:
%   Contact: tianyiwang666@gmail.com (Dr WANG Tianyi)
%   Copyright reserved.
%--------------------------------------------------------------------------

%% Default parameters
if nargin == 5
    method = 'smooth';
    is_fall = false;
end
if nargin == 6
    is_fall = false;
end

%% Different extension algorithms
tif_mpp = tif_params.tif_mpp;
if strcmp(method, 'zero')
    [Xext, Yext, Zext, ca_range] = surface_extension_rectangular_zeros(...
        X, Y, Z, ...
        tif_mpp, ...
        Ztif ...
    );
elseif strcmp(method, '8nn')
    [Xext, Yext, Zext, ca_range] = surface_extension_rectangular_8nn(...
        X, Y, Z, ...
        tif_mpp, ...
        Ztif ...
    );
elseif strcmp(method, 'nn')
    [Xext, Yext, Zext, ca_range] = surface_extension_rectangular_nn(...
        X, Y, Z, ...
        tif_mpp, ...
        Ztif ...
    );
elseif strcmp(method, 'smooth')
    [Xext, Yext, Zext, ca_range] = surface_extension_rectangular_smooth(...
        X, Y, Z, ...
        tif_mpp, ...
        Ztif ...
    );
elseif strcmp(method, 'gauss')
    [Xext, Yext, Zext, ca_range] = surface_extension_rectangular_gauss(...
        X, Y, Z, ...
        tif_params, ...
        Ztif ...
    );
elseif strcmp(method, 'gerchberg')
    if nargin ~= 9
        error('Not enough parameters for Gerchberg algorithm:fx_range and fy_range should be fed.');
    else
        [Xext, Yext, Zext, ca_range] = surface_extension_rectangular_gp(...
            X, Y, Z, ...
            tif_mpp, ...
            Ztif, ...
            fxRange, fyRange ...
        );
    end
elseif strcmp(method, 'poly')
    if nargin <12
        error('Not enough parameters for polynomial fitting algorithm: order_m, order_n, and type should be fed.');
    elseif nargin == 12
        [Xext, Yext, Zext, ca_range] = surface_extension_rectangular_polyfit(...
            X, Y, Z, ...
            tif_mpp, ...
            Ztif, ...
            orderM, orderN, ...
            type ...
        );
    else
        [Xext, Yext, Zext, ca_range] = surface_extension_rectangular_polyfit( ...
            X, Y, Z, ...
            tif_mpp, ...
            Ztif, ...
            orderM, orderN, ...
            type, ...
            B, ...
            W ...
        );
    end
else
    error('Invalid algorithm selected.');
end

%% Fall or not
if is_fall
    if(~strcmp(method, 'zeros') && ~strcmp(method, 'gauss') && ~strcmp(method, 'poly'))
        Zext = surface_extension_rectangular_fall(...
            Xext, Yext, Zext, ...
            ca_range, ...
            tif_mpp, ...
            Ztif ...
        );
    else
        warning(['Fall profile is automatically disabled for ' method ' algorithm']);
    end
end

tmp = Zext;
Zres = Zext(ca_range.vs: ca_range.ve, ca_range.us: ca_range.ue) - Z;
Zext(ca_range.vs: ca_range.ve, ca_range.us: ca_range.ue) = Z;
Zext(isnan(Zext)) = tmp(isnan(Zext));

end